# rename this to “.env” and fill in real values (do NOT commit .env to Git!)
SECRET_KEY=replace_with_at_least_32_chars_long_secret
API_TOKEN=replaceWithAtLeast20CharToken

from pydantic import BaseSettings, Field, SecretStr, ValidationError

class Settings(BaseSettings):
    # require a 32+ char secret, stored securely
    SECRET_KEY: SecretStr = Field(..., min_length=32,
                                 description="32+ character secret key for signing")
    # require an alphanumeric token of at least 20 chars
    API_TOKEN: SecretStr = Field(..., min_length=20,
                                 description="20+ character alphanumeric API token")

    class Config:
        env_file = ".env"
        env_file_encoding = "utf-8"

try:
    settings = Settings()
except ValidationError as e:
    # crash early if .env is missing or invalid
    print("❌ Configuration error:\n", e)
    raise SystemExit(1)

from config import settings

# to get the plain string:
secret_key = settings.SECRET_KEY.get_secret_value()
api_token  = settings.API_TOKEN.get_secret_value()

# now you can safely use `secret_key` and `api_token`—
# Pydantic has already ensured they meet your criteria
