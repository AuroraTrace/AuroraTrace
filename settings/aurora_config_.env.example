# rename this to “.env” and fill in real values (do NOT commit .env to Git!)
SECRET_KEY=replace_with_at_least_32_chars_long_secret
API_TOKEN=replaceWithAtLeast20CharToken

from pydantic import BaseSettings, Field, SecretStr, ValidationError, validator
import sys

class Settings(BaseSettings):
    SECRET_KEY: SecretStr = Field(
        ...,
        min_length=32,
        description="32+ character secret key for signing"
    )
    API_TOKEN: SecretStr = Field(
        ...,
        min_length=20,
        regex=r"^[A-Za-z0-9]+$",
        description="20+ character alphanumeric API token"
    )

    @validator("API_TOKEN")
    def check_api_token(cls, v: SecretStr) -> SecretStr:
        token = v.get_secret_value()
        if not token.isalnum():
            raise ValueError("API_TOKEN must be strictly alphanumeric")
        return v

    class Config:
        env_file = ".env"
        env_file_encoding = "utf-8"
        case_sensitive = True

try:
    settings = Settings()
except ValidationError as e:
    sys.stderr.write("❌ Configuration error:\n" + str(e) + "\n")
    sys.exit(1)

# access secrets
secret_key = settings.SECRET_KEY.get_secret_value()
api_token  = settings.API_TOKEN.get_secret_value()
